<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CurrentWorkingDirectory</key>
	<string>/Users/richard/gitrepositories/Arsenic</string>
	<key>WorksheetContents</key>
	<string>cd ~/gitrepositories/Arsenicmake cleanmake linksmake Arsenicmake Checkmake ToLaTeXmake Test./Test proofs/MP.proof./Test proofs/MP_loparallel.unproof -error 5 lo-parallel -error 6 lo-parallel -error 5 bo-parallel -error 8 "EXT stability"./Test proofs/MP_loparallelB.unproof -error 5 lo-parallel -error 6 lo-parallel -error 5 bo-parallel./Test proofs/MP_loparallelC.unproof -error 8 "EXT stability of f=1=&gt;m=0 against _B(m=0) | m := 1" \                                     -error 8 "EXT stability of f=1=&gt;m=0 against _B(f=0) | f := 1" \                                     -error 9 "EXT stability of r1=1=&gt;f=1/\m=0 against _B(m=0) | m := 1"./Test proofs/MP_boparallel.unproof -error 5 bo-parallel -error 8 "EXT stability"./Test proofs/MP_boparallelB.unproof -error 5 bo-parallel./Test proofs/MP_boparallelC.unproof -error 10 "EXT stability"./Test proofs/almostWRC.proof./Test proofs/almostISA2.proof./Test proofs/WRC.proof./Test proofs/MP_conditional.proof./Test proofs/PPOCA.unproof -error 20 "inheritance of embroidery r3=1"./Test -LocalSpec true proofs/PPOCAgo.unproof -error 16 "inheritance of embroidery m=1"./Test -LocalSpec false proofs/PPOCAgo.unproof -error 15 inclusion -error 16 "inheritance of embroidery m=1"./Test proofs/PPOCA.proof./Test proofs/MP_dountil.proof./Test proofs/MP_dountil_locd.proof./Test proofs/MP_while.proof./Test proofs/LB.proof./Test -SCloc false proofs/LB.proof -error 9 "EXT stability" -error 16 "EXT stability"./Test -SCreg true proofs/SCreg.proof./Test -SCreg false proofs/SCreg.proof -error 6 lo-parallel./Test -SCreg true proofs/nothinair.proof./Test -SCreg false proofs/nothinair.proof./Test -LocalSpec true proofs/C11_42.proof./Test -LocalSpec false proofs/C11_42.proof -error 17 lo-parallel \                                            -error 18 lo-parallel -error 20 inclusion \                                            -error 22 "inheritance of embroidery false"./Test proofs/SB2.proof./Test proofs/IRIW.proof./Test proofs/UEXT.unproof -error 7 "UO-EXT stability"./Test proofs/uo-unstable-interference.unproof -error 4 "self-uo stability"./Test -SCloc false proofs/LBwithoutSCloc.proof./Test -SCloc false -sat false proofs/LBwithoutSCloc.proof./Test proofs/tokenringsingleassert.proof./Test proofs/tokenringsingleifthen.proof./Test proofs/tokenringsingleifthenaux.proof./Test proofs/tokenring3assert.proof./Test proofs/tokenring3ifthen.proof./Test proofs/CoRR0.proof./Test proofs/CoRR1.proof./Test proofs/CoRR2.proof./Test -SCloc false proofs/CoRR2.proof -error 0 "coherence assertions" \                                       -error 11 "inheritance of embroidery r1!=r2=&gt;_c(x,r1,r2)" \                                       -error 15 "inheritance of embroidery r1!=r2=&gt;_c(x,r1,r2)"./Test proofs/CoRR2_aux.proof./Test -SCloc false proofs/CoRR2_aux.proof ./Test proofs/CoWW.proof./Test proofs/S.proof./Test proofs/S_simple.proof./Test proofs/WWC.proof./Test proofs/R.proof./Test proofs/R+bo+lo.unproof -undecided 15 "inheritance of program postcondition"./Test proofs/R+uo+lo.unproof -error 15 "inheritance of program postcondition"./Test proofs/R+uo+lo+flag.unproof -error 15 "EXT stability of f=1=&gt;(_U(x=1) since y=1)" \                                   -error 16 "EXT stability of r2=1\/f=1=&gt;(_U(x=1) since y=1)"./Test proofs/R+uo+lo+flag.unparse -error 3 "_B(_U(x=1) since y=1) contains temporal coincidence" \                                   -error 8 "_B(_U(x=1) since y=1) contains temporal coincidence"./Test proofs/R+uo+lo+otherflag.unproof -error 8 "EXT stability of f=1=&gt;ouat(x=0/\y=2)"./Test proofs/R+uo+lo+otherflag.unparse -error 14 "_B(ouat(x=0/\y=2)) contains temporal coincidence" \                                        -error 20 "_B(ouat(x=0/\y=2)) contains temporal coincidence"./Test -spunchanged false proofs/R+uo+lo.unproof -error 15 "inheritance of program postcondition" \                                                 -error 13 "EXT stability of r1=0=&gt;ouat(x=0/\y=2) against true | x := 1"./Test proofs/WRW+WR.proof./Test proofs/IRRWIW.proof./Test proofs/WRR+2W.proof./Test proofs/IRRWIW.proof./Test proofs/2+2W.proof# ./Arsenic proofs/WRW+2W.proof./Test -SCloc false -sat false proofs/nonSCloctermination.proof./Test proofs/SClocnontermination.proof./Test proofs/mergesort.proof#./Check proofs/mergesort.query#./Check proofs/R.query./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Receiver \          -cols -multilace proofs/MP.proof./ToLaTeX -lab aa init -lab zz final -cols -multilace -noaux proofs/LB.proof./ToLaTeX -lab aa init -lab zz final \          -cols -multilace proofs/SB2.proof./ToLaTex -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Lo-parallel sender" -thread 1 "MP Receiver" \          proofs/MP_loparallel.unproof./ToLaTex -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Lo-parallel sender" -thread 1 "Blocked receiver" \          -cols proofs/MP_loparallelB.unproof./ToLaTex -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Lo-parallel sender" -thread 1 "Unblocked receiver" \          -cols proofs/MP_loparallelC.unproof./ToLaTex -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Bo-parallel sender" -thread 1 "Blocked receiver" \          -cols proofs/MP_boparallelB.unproof./ToLaTex -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Bo-parallel sender" -thread 1 "Unblocked receiver" \          -cols -embroider proofs/MP_boparallelC.unproof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -cols -lace proofs/almostWRC.proof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -embroider proofs/almostWRC.proof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -cols -lace proofs/almostISA2.proof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -embroider proofs/almostISA2.proof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -cols -lace -noaux proofs/WRC.proof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -cols -multilace proofs/WRC.proof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 Sender -thread 1 Proxy -thread 2 Receiver \          -embroider proofs/WRC.proof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final -lab bb beta \          -thread 0 Sender -thread 1 "Conditional receiver" \          -cols -multilace proofs/MP_conditional.proof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final -lab bb beta \          -thread 0 Sender -thread 1 "Looping receiver" \          -cols -multilace proofs/MP_dountil.proof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final -lab bb beta \          -thread 0 Sender -thread 1 "While-loop receiver" \          -cols -multilace proofs/MP_while.proof./ToLaTex -lab aa init -lab zz final -cols -multilace proofs/SCreg.proof./ToLaTex -lab aa init -lab zz final -cols -multilace proofs/nothinair.proof./ToLaTex -lab aa init -lab zz final -lab bb beta -lab cc gamma -cols -multilace proofs/C11_42.proof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final -lab bb beta \          -thread 0 Sender -thread 1 "Faulty PPOCA receiver" \          -cols -multilace proofs/PPOCA.unproof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final -lab bb beta \          -thread 0 Sender -thread 1 "Faulty PPOCA receiver" \          -cols -multilace proofs/PPOCAco.unproof./ToLaTeX -name m msg -name f flag -name g flag1 \          -lab aa init -lab zz final -lab bb beta \          -thread 0 Sender -thread 1 "PPOCA receiver" \          -cols -multilace proofs/PPOCA.proof./ToLaTex -lab aa init -lab zz final -cols -multilace proofs/SB2.proof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Lo sender" -thread 1 "UEXT-unstable receiver" \          -cols -multilace proofs/UEXT.unproof./ToLaTeX -name m msg -name f flag \          -lab aa init -lab zz final \          -thread 0 "Uo-unstable Sender" -thread 1 "Receiver" \          -cols -multilace proofs/uo-unstable-interference.unproof./ToLaTeX -lab aa init -lab zz final -cols -multilace -noaux proofs/LBwithoutSCloc.proof./ToLaTeX -lab aa init -lab zz final -lab bb beta -lab cc gamma \          -name lh latch -name tk token \          -cols -multilace -noaux proofs/tokenringsingle.proof./ToLaTeX -lab aa init -lab zz final -lab bb beta -lab cc gamma \          -name lh latch -name tk token \          -cols -multilace -noaux proofs/tokenringsingleassert.proof./ToLaTeX -lab aa init -lab zz final -lab bb beta -lab cc gamma -lab dd delta \          -name lh latch -name tk token \          -cols -multilace -noaux proofs/tokenringsingleifthen.proof./ToLaTeX -lab aa init -lab zz final -lab bb beta -lab cc gamma -lab dd delta \          -name lh latch -name tk token \          -cols -multilace -noaux proofs/tokenringsingleifthenaux.proof./ToLaTex -name lh0 latch0 -name lh1 latch1 -name lh2 latch2 \          -name tk0 token0 -name tk1 token1 -name tk2 token2 \          -lab aa init -lab zz final -lab bb beta -lab cc gamma -lab dd delta\          -cols -noaux -multilace proofs/tokenring3assert.proof./ToLaTex -name lh0 latch0 -name lh1 latch1 -name lh2 latch2 \          -name tk0 token0 -name tk1 token1 -name tk2 token2 \          -lab aa init -lab zz final -lab bb beta -lab cc gamma -lab dd delta\          -cols -noaux -multilace proofs/tokenring3ifthen.proof./ToLaTeX -lab aa init -lab zz final \          -thread 0 "Writer" -thread 1 "Observer" \          -cols -multilace proofs/CoRR0.proof./ToLaTex -lab aa init -lab zz final \          -thread 0 "Writer A" -thread 1 "Writer B" -thread 2 "Observer A" -thread 3 "Observer B" \          -cols -multilace proofs/CoRR2.proof./ToLaTex -lab aa init -lab zz final -name m msg -name f flag -cols -lace proofs/S.proof./ToLaTex -lab aa init -lab zz final -name m msg -name f flag -embroider proofs/S.proofprocessing proofs/S.proof% proofs/S.proof$$\cols[c]\assert{\&lt;init&gt;::\&lt;msg&gt;=\&lt;flag&gt;=0} \vspace{3pt} \\\BRA[l||l]\thr{Thread 0}  \!\!\cols[r@{\intfspace}l]  \assertd{\&lt;lo&gt; \&lt;init&gt;} &amp; \&lt;laba&gt;:: \&lt;msg&gt;:=1; \\  \assertd{\&lt;bo&gt; \&lt;laba&gt;} &amp; \&lt;labb&gt;:: \&lt;flag&gt;:=1  \sloc\rht&amp;\thr{Thread 1}  \!\!\cols[r@{\intfspace}l]  \assertd{\&lt;lo&gt; \&lt;init&gt;} &amp; \&lt;labc&gt;:: \&lt;r1&gt;:=\&lt;flag&gt;; \\  \assertd{\&lt;lo&gt; \&lt;labc&gt;;\&lt;lo&gt; \&lt;init&gt;} &amp; \&lt;labd&gt;:: \&lt;msg&gt;:=2  \sloc\rht\KET \vspace{3pt} \\\assert{\&lt;final&gt;::!(1:::\&lt;r1&gt;=1@\&lt;msg&gt;=1)}\sloc$$processing proofs/S.proof% proofs/S.proof$$\cols[c]\assert{\&lt;init&gt;::\&lt;msg&gt;=\&lt;flag&gt;=0} \vspace{3pt} \\\BRA[l||l]\thr{Thread 0}  \guarantee{\interferenceg{\&lt;true&gt;}{\&lt;msg&gt;:=1}; \\ \interferenceg{\&lt;Bfr&gt;(\&lt;ouat&gt;(\&lt;msg&gt;=1))}{\&lt;flag&gt;:=1}} \vspace{3pt} \vspace{3pt} \\  \assertd{\&lt;lo&gt; \&lt;init&gt;:: \&lt;sofar&gt;(\&lt;msg&gt;!=1)} \\ \quad \&lt;laba&gt;:: \&lt;msg&gt;:=1; \\  \assertd{\&lt;bo&gt; \&lt;laba&gt;:: \&lt;Bfr&gt;(\&lt;ouat&gt;(\&lt;msg&gt;=1))} \\ \quad \&lt;labb&gt;:: \&lt;flag&gt;:=1\rht&amp;\thr{Thread 1}  \guarantee{\interferenceg{\&lt;true&gt;}{\&lt;msg&gt;:=2}} \vspace{3pt} \vspace{3pt} \\  \assertd{\&lt;lo&gt; \&lt;init&gt;:: \&lt;flag&gt;=1=&gt;\&lt;ouat&gt;(\&lt;msg&gt;=1)} \\ \quad \&lt;labc&gt;:: \&lt;r1&gt;:=\&lt;flag&gt;; \\  \assertd{\&lt;lo&gt; \&lt;labc&gt;:: \&lt;r1&gt;=1=&gt;\&lt;ouat&gt;(\&lt;msg&gt;=1);\&lt;lo&gt; \&lt;init&gt;:: \&lt;sofar&gt;(\&lt;msg&gt;!=2)} \\ \quad \&lt;labd&gt;:: \&lt;msg&gt;:=2 \vspace{3pt} \\  \assertd{\&lt;lo&gt; \&lt;labd&gt;:: \&lt;r1&gt;=1=&gt;\&lt;msg&gt;_{c}(1,2)}\rht\KET \vspace{3pt} \\\assert{\&lt;final&gt;::!(1:::\&lt;r1&gt;=1@\&lt;msg&gt;=1)}\sloc$$./ToLaTex -lab aa init -lab zz final -cols -lace proofs/R.proof./ToLaTex -lab aa init -lab zz final -embroider proofs/R.proof./ToLaTex -lab aa init -lab zz final -lace -cols proofs/R+uo+lo.unproof./ToLaTex -lab aa init -lab zz final -embroider proofs/R+uo+lo.unproof./ToLaTex -lab aa init -lab zz final -name f flag -lab bb beta -cols -embroider proofs/R+uo+lo+flag.unparse./ToLaTex -lab aa init -lab zz final -name f flag -lab bb beta -cols -embroider proofs/R+uo+lo+flag.unproof./ToLaTex -lab aa init -lab zz final -name f flag -lab bb beta -lab dd delta -embroider proofs/R+uo+lo+otherflag.unparse./ToLaTex -lab aa init -lab zz final -name f flag -lab bb beta -lab dd delta -embroider proofs/R+uo+lo+otherflag.unproof./ToLaTex -lab aa init -lab zz final \          -thread 0 "Writer A" -thread 1 "Writer B" -thread 2 "Observer" \          -cols -lace proofs/2+2W.proof./ToLaTex -lab aa init -lab zz final \          -name aux1 aux1 -name aux2 aux2 \          -thread 0 "Writer A" -thread 1 "Writer B" -thread 2 "Observer A" -thread 3 "Observer B" \          -multilace proofs/CoRR2_aux.proof./ToLaTex -lab aa init -lab zz final \          -name m msg -name f flag \          -thread 0 "Sender A" -thread 1 "Sender B" -thread 2 "Receiver A" -thread 3 "Receiver B" \          -cols -multilace proofs/nonSCloctermination.proof          ./Check proofs/loparallel.query./Check proofs/boparallel.query./Check -treeformulas false proofs/sofar_unproof.query./Check -treeformulas false proofs/tokenringsingle.query./Check -treeformulas false proofs/tokenring3.query./Check -treeformulas false proofs/SB.query./Check -treeformulas false proofs/UBsince.query./Check -treeformulas false -simpleUBsince true proofs/UBsince.query./Check -treeformulas false proofs/WRC.query./Check proofs/Bquery.query</string>
</dict>
</plist>
